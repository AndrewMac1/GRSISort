#include "Position.h"

//g++ Position.cxx -c -oPosition `root-config --cflags --libs`


Detector::Detector(){}

void Detector::SetThetaPhi(Double_t theta, Double_t phi){

  Double_t cp = 5.0; //Crystal Center Point Might have adepth eventually
//Set Theta's of the center of each DETECTOR face
//Define one Detector position

  Detector detectorTemplate;//Initializes components to 0.
  //Define blue crystal first
  detectorTemplate.fShift[kBlue].SetXYZ(-cp,cp,0);
  detectorTemplate.fShift[kGreen].SetXYZ(cp,cp,0);
  detectorTemplate.fShift[kRed].SetXYZ(cp,-cp,0);
  detectorTemplate.fShift[kWhite].SetXYZ(-cp,-cp,0);
//  detector[0].Position = detectorTemplate.RotateX(80);


//This sets the Theta and Phi for a detector by setting the central angle and transforming the shitft vectors
   if(fCrystalPosition[kCenter].Mag() < 0.001){ //I need to set the magnitude to some value (Unity?) if it is currently 0.
      fCrystalPosition[kCenter].SetMag(1.00);
   }

   fCrystalPosition[kCenter].SetTheta(theta);
   fCrystalPosition[kCenter].SetPhi(phi);

  for(int i=0;i < 5; i++){
     fShift[i].RotateY(theta);
     fShift[i].RotateZ(phi);
  } 
}
/*
void Detector::SetTheta(Double_t theta){
  for(int i=0,i<5,i++){
     fPosition[i].Rotate

*/


Position::Position(){

//Might have to inisialize a magnitude for anything to work here
//Downstream Lampshde 
   detector[0].SetThetaPhi(45.0,67.5);
   detector[1].SetThetaPhi(45.0,157.5); 
   detector[2].SetThetaPhi(45.0,247.5);
   detector[3].SetThetaPhi(45.0,337.5);


//Corona
   detector[4].SetThetaPhi(90.0,22.5);
   detector[5].SetThetaPhi(90.0,67.5);
   detector[6].SetThetaPhi(90.0,112.5);
   detector[7].SetThetaPhi(90.0,157.5);
   detector[8].SetThetaPhi(90.0,202.5);
   detector[9].SetThetaPhi(90.0,247.5);
   detector[10].SetThetaPhi(90.0,292.5);
   detector[11].SetThetaPhi(90.0,337.5);


//Upstream Lampshade
   detector[12].SetThetaPhi(135.0,67.5);
   detector[13].SetThetaPhi(135.0,157.5);
   detector[14].SetThetaPhi(135.0,247.5);
   detector[15].SetThetaPhi(135.0,337.5);

}







TVector3 Position::SetPosition(UShort_t det, UShort_t crystal = Detector::kCenter, Double_t dist = 110.0){
//If crystal = 4 take the center of the detector?

   detector[det].fCrystalPosition[crystal].SetMag(dist);   

   detector[det].fCrystalPosition[crystal] = 

   return coords[Det][Crystal]; 


}




















